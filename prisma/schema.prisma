// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  walletAddress String       @unique
  publicKey     String       @unique
  Profile       Profile?
  enrollments   Enrollment[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  name   String?
  email  String? @unique
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Course {
  id                Int          @id @default(autoincrement())
  name              String
  tags              String[]     @default([])
  descriptionSmall  String       @default("")
  descriptionLarge  String       @default("")
  descriptionPoints String[]     @default([])
  enrollments       Enrollment[]
  Module            Module[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Module {
  id        Int       @id @default(autoincrement())
  index     Int
  title     String
  chapter   Chapter[]
  courseId  Int
  course    Course    @relation(fields: [courseId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Chapter {
  id        Int      @id @default(autoincrement())
  index     Int
  text      String?
  videoUrl  String?
  moduleId  Int
  module    Module   @relation(fields: [moduleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  userId    Int
  courseId  Int
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}
